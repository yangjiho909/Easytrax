name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  AWS_REGION: ap-northeast-2
  EB_APPLICATION_NAME: kati-export-helper
  EB_ENVIRONMENT_NAME: kati-production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Install EB CLI
      run: |
        pip install awsebcli
        
    - name: Deploy to Elastic Beanstalk
      run: |
        # EB 초기화 (이미 존재하는 경우 스킵)
        if [ ! -f .elasticbeanstalk/config.yml ]; then
          eb init ${{ env.EB_APPLICATION_NAME }} --region ${{ env.AWS_REGION }} --platform "Python 3.11"
        fi
        
        # 환경이 존재하지 않으면 생성
        if ! eb status ${{ env.EB_ENVIRONMENT_NAME }}; then
          eb create ${{ env.EB_ENVIRONMENT_NAME }} --elb-type application --instance-type t3.small
        fi
        
        # 배포
        eb deploy ${{ env.EB_ENVIRONMENT_NAME }} --timeout 20
        
    - name: Get deployment URL
      run: |
        DEPLOYMENT_URL=$(eb status ${{ env.EB_ENVIRONMENT_NAME }} --output json | jq -r '.Environment.CNAME')
        echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
        echo "🚀 배포 완료! URL: http://$DEPLOYMENT_URL"
        
    - name: Health check
      run: |
        sleep 30
        curl -f http://${{ env.DEPLOYMENT_URL }} || exit 1 